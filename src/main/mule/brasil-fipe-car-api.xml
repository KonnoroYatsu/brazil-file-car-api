<?xml version="1.0" encoding="UTF-8"?>

<mule
	xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
		http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
		http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
	
	<flow name="main-brasil-fipe-car-api-flow"
		doc:id="7f124a1d-5cf0-43a6-87da-509aece69b08">
		<set-variable
			value="#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	brand: payload.brand,&#10;	model: payload.model,&#10;	version: payload.version,	&#10;	engine: payload.engine,&#10;	gearshift: payload.gearshift,&#10;	year: payload.year,&#10;	fuelType: payload.fuelType&#10;}]"
			doc:name="vars.carInfo" doc:id="6555665b-805e-4e49-b655-0269f439986a"
			variableName="carInfo" />
		<flow-ref
			doc:name="get-car-brand-id-brasil-fipe-car-api-flow"
			doc:id="5f5bb995-5582-49ec-9040-b2517242ad8a"
			name="get-car-brand-id-brasil-fipe-car-api-flow" />
		<logger level="INFO"
			doc:name="[INFO] - Car brand successfully found!"
			doc:id="f372c201-5d4a-453f-892f-9dc93ae6e9af"
			message='#["Car brand successfully found!"]' />
		<flow-ref doc:name="get-car-models-brasil-fipe-car-api-flow"
			doc:id="7da2e7c4-fd97-43d6-805b-623bd60fa0b1"
			name="get-car-models-brasil-fipe-car-api-flow" />
		<logger level="INFO"
			doc:name="[INFO] - Car model successfully found!"
			doc:id="0f8b9b9a-7b96-49be-b140-be8488c92e9b"
			message='#["Car model successfully found!"]' />
		<error-handler
			ref="common-brasil-fipe-car-error-handler-errors-flow" />
	</flow>
	
	<sub-flow name="get-car-brand-id-brasil-fipe-car-api-flow"
		doc:id="54308861-4cd3-4590-9362-0eab50a15c8b">
		<set-variable
			value='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	host: p("fipe_api.host"),&#10;	basePath: p("fipe_api.base_path"),&#10;	path: p("fipe_api.paths.brands"),&#10;	method: "GET"&#10;}]'
			doc:name="vars.genericRequester"
			doc:id="23ceb82b-8b3a-4538-8c7e-1d5e73655699"
			variableName="genericRequester" />
		<flow-ref doc:name="generic-https-requester-commons-flow"
			doc:id="9782109e-2d42-4317-86aa-9449197337f7"
			name="generic-https-requester-commons-flow" />
		<set-variable
			value="#[%dw 2.0&#10;output application/json&#10;---&#10;(payload[?((upper($.nome)) == (upper(vars.carInfo.brand)))])[0].codigo]"
			doc:name="vars.brandId" doc:id="4aed5cdc-ac96-4297-b017-b9666798393d"
			variableName="brandId" />
		<validation:is-not-null
			doc:name="Was the car's brand id found?"
			doc:id="f86bb7fa-1909-43b3-b65e-dd39167e5747" value="#[vars.brandId]"
			message='#["Could not find the car brand"]'>
			<error-mapping sourceType="VALIDATION:NULL"
				targetType="FIPECAR:BRAND_NOT_FOUND" />
		</validation:is-not-null>
	</sub-flow>
	
	<sub-flow name="get-car-models-brasil-fipe-car-api-flow"
		doc:id="4ca0697a-c8fe-4bb5-9ef2-c896e26febcf">
		<set-variable
			value='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	host: p("fipe_api.host"),&#10;	basePath: p("fipe_api.base_path"),&#10;	path: p("fipe_api.paths.models"),&#10;	uriParameters: {&#10;		brandId: vars.brandId&#10;	},&#10;	method: "GET",&#10;}]'
			doc:name="vars.genericRequester"
			doc:id="d16aa985-44ac-462e-9ce3-976c8fb0a33b"
			variableName="genericRequester" />
		<flow-ref doc:name="generic-https-requester-commons-flow"
			doc:id="7e688c6a-7228-4cd9-871b-2e826efd1f54"
			name="generic-https-requester-commons-flow" />
		<set-variable
			value='#[output json&#10;var regexPattern = (&#10;	".*\\b$(upper(vars.carInfo.model))\\b.*" ++&#10;	"\\b$(upper(vars.carInfo.version))\\b.*" ++&#10;	"\\b$(upper(vars.carInfo.engine))\\b.*" ++&#10;	"\\b$(upper(vars.carInfo.gearshift))\\b.*"&#10;) &#10;--- &#10;payload.modelos filter (&#10;    upper($.nome) matches regexPattern&#10;)]'
			doc:name="vars.model" doc:id="95c13129-5e8c-4859-a3a3-9f6c4cc819df"
			variableName="model" />
		<validation:is-not-empty-collection
			doc:name="Were compatible model found?"
			doc:id="72f51470-80cd-45c2-b0ae-c99d3e884fc2" values="#[vars.model]"
			message='#["Could not find the car model"]'>
			<error-mapping sourceType="VALIDATION:EMPTY_COLLECTION"
				targetType="FIPECAR:MODELS_NOT_FOUND" />
		</validation:is-not-empty-collection>
	</sub-flow>
</mule>
